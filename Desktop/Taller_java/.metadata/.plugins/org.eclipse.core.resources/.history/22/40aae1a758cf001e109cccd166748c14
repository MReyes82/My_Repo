package figurasClases;

import javax.swing.JOptionPane;

public class Main 
{
	Cuadrado misCuadrados[] = new Cuadrado[5];
	Circulo misCirculos[] = new Circulo[5];
	Rectangulo misRectangulos[] = new Rectangulo[5];
	Figura misFiguras[] = new Figura[15];
	
	int contadorFiguras = 0;
	int contadorCuadrados = 0; 
	int contadorCirculos = 0; 
	int contadorRectangulos = 0;
	int i;
	
	public static void main(String[] args) 
	{
		Main p = new Main();
		p.inicio();
	}

	public void inicio()
	{
		Boolean correPrograma = true;
		int opcion;
		
		while (correPrograma)
		{
			opcion = Integer.parseInt(JOptionPane.showInputDialog("MENU\n1) Crear circulo\n2) Crear rectangulo\n3) Crear cuadrado\n4) Mostrar cuadrados\n"
								+ "5) Mostrar circulos\n6) Mostrar Rectangulos\n"
					+ "7) Mostrar figuras.\n8) Terminar programa"));
			
			switch(opcion)
			{
			case 1:
				circuloMenu();
				break;
				
			case 2:
				rectanguloMenu();
				break;
				
			case 3:
				cuadradoMenu();
				break;
				
			case 4:
				mostrarCuadrado();
				break;
			
			case 5:
				mostrarCirculos();
				break;
				
			case 6:
				mostrarRectangulos();
				break;
				
			case 7:
				mostrarFiguras();
				break;
				
			case 8:
				JOptionPane.showMessageDialog(null, "Hasta luego!");
				correPrograma = false;
				break;
				
			default:
				JOptionPane.showMessageDialog(null, "Opcion no valida, vuelve a elegir.");
				break;
			}
		}
		
	}
	
	public void mostrarCuadrado()
	{
		for(i = 0 ; i < contadorCuadrados ; i++)
		{
			JOptionPane.showMessageDialog(null,  (i+1) + misCuadrados[i].toString());
		}
	}
	
	public void mostrarRectangulos()
	{
		for (i = 0 ; i < contadorRectangulos ; i++)
		{
			JOptionPane.showMessageDialog(null, (i+1) + misRectangulos[i].toString());
		}
	}
	
	public void mostrarCirculos()
	{
		for (i = 0 ; i < contadorCirculos ; i++)
		{
			JOptionPane.showMessageDialog(null, (i+1) + misCirculos[i].toString());
		}
	}
	
	public void circuloMenu()
	{
		float diametroInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa el diametro del circulo: "));
		Figura nuevoCirculo = new Circulo(diametroInput);
		nuevoCirculo.compArea();
		nuevoCirculo.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoCirculo.toString());
		
		misCirculos[contadorCirculos++] = (Circulo) nuevoCirculo;
		misFiguras[contadorFiguras++] = nuevoCirculo;
		
	}
	
	public void rectanguloMenu()
	{
		float baseInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa la base del rectangulo: "));
		float alturaInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa la altura del rectangulo: "));
		Rectangulo nuevoRectangulo = new Rectangulo(baseInput, alturaInput);
		nuevoRectangulo.compArea();
		nuevoRectangulo.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoRectangulo.toString());
		
		misRectangulos[contadorRectangulos++] = nuevoRectangulo;
		
	}
	
	public void cuadradoMenu()
	{
		float ladoInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa el lado del cuadrado: "));
		// utilizando el constructor con parametros
		Cuadrado nuevoCuadrado = new Cuadrado(ladoInput);
		nuevoCuadrado.compArea();
		nuevoCuadrado.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoCuadrado.toString());
		
		misCuadrados[contadorCuadrados++] = nuevoCuadrado;
		
	}
	
	 //TODO:
	 //mejorar el menu (implementar menu de seleccion)
	public void modificarCuadrado()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de cuadrado a modificar: "));
		indice--; // regularizamos el indice
		
		if (indice > contadorCuadrados || indice < 0)
		{
			JOptionPane.showInputDialog("Indice no valido.");
			return;
		}
		
		Cuadrado aux = misCuadrados[indice];
		
		float nuevoLado = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
		aux.setLado(nuevoLado);
		aux.compArea();
		aux.compPerimetro();
		
	}
	
	public void modificarRectangulo()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de rectangulo a modificar: "));
		indice--; // regularizamos el indice
		
		if (indice > contadorRectangulos || indice < 0)
		{
			JOptionPane.showInputDialog("Indice no valido.");
			return;
		}
		
		Rectangulo aux = misRectangulos[indice];
		
		float nuevaBase = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
		float nuevaAltura = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
		
		aux.setBase(nuevaBase);
		aux.setAltura(nuevaAltura);
		aux.compArea();
		aux.compPerimetro();
		
	}
	
	public void modificarCirculo()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de circulo a modificar: "));
		
		if (indice > contadorCirculos || indice < 0)
		{
			JOptionPane.showInputDialog("Indice no valido.");
			return;
		}
		
		Circulo aux = misCirculos[indice];
		
		float nuevoRadio = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo radio: "));
		
		aux.setRadio(nuevoRadio);
		aux.compArea();
		aux.compPerimetro();
		
	}
	
	public void mostrarFiguras()
	{
		for (i = 0 ; i < contadorFiguras ; i++)
		{
			JOptionPane.showMessageDialog(null, (i+1) + misFiguras[i].toString());
		}
		
	}
	 
}






