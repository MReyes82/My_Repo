package figurasClases;

import javax.swing.JOptionPane;

public class Main 
{
	Figura misFiguras[] = new Figura[15];
	
	int contadorFiguras = 0;
	int i;
	
	public static void main(String[] args) 
	{
		Main p = new Main();
		p.inicio();
	}

	public void inicio()
	{
		Boolean correPrograma = true;
		int opcion;
		
		while (correPrograma)
		{
			opcion = Integer.parseInt(JOptionPane.showInputDialog("MENU\n1) Crear circulo\n2) Crear rectangulo\n3) Crear cuadrado\n"
					+ "4) Mostrar figuras.\n5) Modificar figuras.\n6) Terminar programa\n"));
			
			switch(opcion)
			{
			case 1:
				circuloMenu();
				break;
				
			case 2:
				rectanguloMenu();
				break;
				
			case 3:
				cuadradoMenu();
				break;
				
			case 4:
				mostrarFiguras();
				break;
			
			case 5:
				modificarFiguras();
				break;
			
			case 6:
				JOptionPane.showMessageDialog(null, "Hasta luego!");
				correPrograma = false;
				break;
				
			default:
				JOptionPane.showMessageDialog(null, "Opcion no valida, vuelve a elegir.");
				break;
			}
		}
		
	}
	
	public void circuloMenu()
	{
		float diametroInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa el diametro del circulo: "));
		Figura nuevoCirculo = new Circulo(diametroInput);
		nuevoCirculo.compArea();
		nuevoCirculo.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoCirculo.toString());
		
		misFiguras[contadorFiguras++] = nuevoCirculo;
		
	}
	
	public void rectanguloMenu()
	{
		float baseInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa la base del rectangulo: "));
		float alturaInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa la altura del rectangulo: "));
		Figura nuevoRectangulo = new Rectangulo(baseInput, alturaInput);
		nuevoRectangulo.compArea();
		nuevoRectangulo.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoRectangulo.toString());
		
		misFiguras[contadorFiguras++] = nuevoRectangulo;
		
	}
	
	public void cuadradoMenu()
	{
		float ladoInput = Float.parseFloat(JOptionPane.showInputDialog("Ingresa el lado del cuadrado: "));
		// utilizando el constructor con parametros
		Figura nuevoCuadrado = new Cuadrado(ladoInput);
		nuevoCuadrado.compArea();
		nuevoCuadrado.compPerimetro();
		
		JOptionPane.showMessageDialog(null, nuevoCuadrado.toString());
		
		misFiguras[contadorFiguras++] = nuevoCuadrado;
		
	}
	
	 //TODO:
	 //mejorar el menu (implementar menu de seleccion)
	public void modificarCuadrado()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de cuadrado a modificar: "));
		indice--; // regularizamos el indice
		
		if (indice > contadorFiguras || indice < 0)
		{
			JOptionPane.showMessageDialog(null, "Indice no valido.");
			return;
		}
		
		Figura aux = misFiguras[indice];
		
		if (!(aux instanceof Cuadrado)) // si la figura NO es un cuadrado
		{
			JOptionPane.showMessageDialog(null, "La figura no es un cuadrado.");
			return;
		}
		
		float nuevoLado = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
			
		Cuadrado mod = (Cuadrado) aux; // hacemos el cast para acceder a setLado
		mod.setLado(nuevoLado);
		mod.compArea();
		mod.compPerimetro();
	}
	
	public void modificarRectangulo()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de rectangulo a modificar: "));
		indice--; // regularizamos el indice
		
		if (indice > contadorFiguras || indice < 0)
		{
			JOptionPane.showMessageDialog(null, "Indice no valido.");
			return;
		}
		
		Figura aux = misFiguras[indice];
		
		if (!(aux instanceof Rectangulo))
		{
			JOptionPane.showMessageDialog(null, "La figura no es un rectangulo.");
			return;
		}
		
		float nuevaBase = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
		float nuevaAltura = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo lado: "));
	
		Rectangulo mod = (Rectangulo) aux;
		mod.setBase(nuevaBase);
		mod.setAltura(nuevaAltura);
		mod.compArea();
		mod.compPerimetro();
	}
	
	public void modificarCirculo()
	{
		int indice = Integer.parseInt(JOptionPane.showInputDialog("Numero de circulo a modificar: "));
		indice--;
		
		if (indice > contadorFiguras || indice < 0)
		{
			JOptionPane.showMessageDialog(null, "Indice no valido.");
			return;
		}
		
		Figura aux = misFiguras[indice];
		
		if (!(Aux instanceof Circulo))
		{
			OptionPane.showMessageDialog(null, "La figura no es un circulo.");
			return;
		}
		
		float nuevoRadio = Float.parseFloat(JOptionPane.showInputDialog("Ingrese el nuevo diametro"));
		
		Circulo mod = (Circulo) aux;
		mod.setRadio(nuevoRadio);
		mod.compArea();
		mod.compPerimetro();
		
		else
		{
			J
		}
	}
	
	public void modificarFiguras()
	{
		int opcion = Integer.parseInt(JOptionPane.showInputDialog("Que tipo de figura desea modificar?\n"
															+ "1) Cuadrado.\n2) Rectangulo.\n3) Circulo"));
		switch(opcion)
		{
		case 1:
			modificarCuadrado();
			break;
		
		case 2:
			modificarRectangulo();
			break;
		
		case 3:
			modificarCirculo();
			break;
		
		default:
			JOptionPane.showMessageDialog(null, "Opcion no valida");
			break;
		}
	}
	
	public void mostrarFiguras()
	{
		for (i = 0 ; i < contadorFiguras ; i++)
		{
			JOptionPane.showMessageDialog(null, (i+1) + " " + misFiguras[i].toString());
		}
		
	}
	 
}






